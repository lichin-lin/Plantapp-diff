<!DOCTYPE html>
<html lang='en'>
<head>
	<meta class="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
	<title>Components | Evie by unDraw</title>
	<%_ currentPage = "/components" _%>
	<% include ./partials/metadata %>
	<link rel='stylesheet' href='<%= asset("css/style.min.css") %>' />
</head>
<body>
	<% include ./partials/nav %>
	<div class="page__header">
		<div class="hero__overlay hero__overlay--gradient"></div>
		<div class="hero__mask"></div>
		<div class="page__header__inner">
			<div class="container">
				<div class="page__header__content">
					<div class="page__header__content__inner" id='navConverter'>
						<h1 class="page__header__title">Components</h1>
						<p class="page__header__text">These serve specific purposes on your website's pages. Here are the most basic ones and their options. The rest are not complex and you can  reuse them easily.</p>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="page">
		<div class="container">
			<div class="page__inner">
				<div class="page__menu">
					<% page = "components" %>
					<% include ./partials/docs_menu %>
				</div>
				<div class="page__main">
					<div class="container">
						<div class="text-container text-container--center">
							<h3>Navigation bar</h3>
							<p>This is used in every page with a few modifications. It is responsive, always fixed and in its most basic form has your main color as background.</p>
							<% include ./partials/code/navbar %>
							<p>In specific cases such as your landing or pages with headers (like this one), there is no point to have a colored background initially. That's why there is a transparent version, which when scrolled over a specified element becomes normal again. To use that add the class "navbar--extended" and the id "navConverter" to the element you prefer.</p>
							<% include ./partials/code/navbar_convert %>
							<p>The navbar is responsive by design but if you have only a few options and want to disable this, just remove the element with the <span class="stress">"nav__mobile"</span> class and the <span class="stress">"navbar__menu-mob"</span> div.</p>
							<h3>Hero unit</h3>
							<p>The top part of your landing, also uses your primary color and a few other layers to create an eye-catching effect. Here is the main code to create it:</p>
							<% include ./partials/code/hero %>
							<p>There are a few thing going on here so let's break it down:</p>
							<p><u class="stress">hero</u>: The main class that creates the hero unit. If you don't want the white line with the scroll option, add the "<span class="stress">hero--full</span>" class and it will cover it. The hero also has an image background which you can remove on your CSS.</p>
							<p><u class="stress">hero__overlay</u>: The color that will cover the hero. This is usually your primary color. To make it easy we use a single color but if you want to have a gradient background with your primary and secondary color add the class <span class="stress">"hero__overlay--gradient"</span> or <span class="stress">"hero__overlay--gradientVertical"</span> for a top to bottom one.</p>
							<p><u class="stress">hero__mask</u>: An SVG gradient mask to improve readability and create an effect. If you want to remove it, just delete the div.</p>
							<p><u class="stress">hero__sub</u>: The white strip on the bottom of your landing that allows users to scroll to the first element with the title <span class="stress">"landing__section"</span>. To remove it just delete it or make the hero fullscreen as mentioned before.</p>
							<h3>Page</h3>
							<p>To create a simple two column layout with a fixed sidebar and an expandable main column, you can use the page component. On mobile and desktops the columns will be stacked vertically. Here is the necessary code:</p>
							<% include ./partials/code/page %>
							<h3>Vertical menu</h3>
							<p>To add a vertical menu with hover effects, like the one in this page, you just need to create a list and add the <span class="stress">"vMenu"</span> class to it. Add the <span class="stress">"vMenu--active"</span> to the page that is currently loaded, if you want.</p>
							<% include ./partials/code/vmenu %>
							<h3>App</h3>
							<p>This behaves almost identical to the page component but should be used with the plain navigation bar instead of the header. This is specified as a way to separate concerns between pages that serve different purposes (app/docs). Here is the necessary code:</p>
							<% include ./partials/code/app %>
							<h3>Other components</h3>
							<p>There are a few more components that are used throughout the pages but are pretty self-explanatory.</p>
							<ul>
								<li><span class="stress">Footer:</span> The black bar at the bottom.</li>
								<li><span class="stress">Auth:</span> The fullscreen authentication component.</li>
								<li><span class="stress">Steps:</span> The 3 column section below the hero.</li>
								<li><span class="stress">Extended sections:</span> The large columns in the landing page.</li>
								<li><span class="stress">Call To Action:</span> The section with the colored background in the landing page.</li>
								<li><span class="stress">Header:</span> The top of the plain pages. You can see it in this page. Remember to enter the id <span class="stress">"navConverter"</span> somewhere on the header to convert the navigation bar to normal.</span></li>
							</ul>
							<div class="docs__options">
								<a href="/pages" class="docs__prev">&#171; Previous: Pages</a>
								<a href="/elements" class="docs__next">Next: Elements &#187;</a>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<% include ./partials/footer %>
<script src='<%= asset("js/app.min.js") %>'></script>
<% include ./partials/analytics %>
</body>
</html>